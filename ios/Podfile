# 1) Define la plataforma mínima y desactiva estadísticas
platform :ios, '13.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# 2) Asegúrate de indicar tu proyecto y sus configuraciones
project 'Runner', 'Debug' => :debug, 'Profile' => :release, 'Release' => :release

# 3) Define dónde está el SDK de Flutter
def flutter_root
  ENV['FLUTTER_ROOT'] || raise("FLUTTER_ROOT no encontrado — verifica que estés usando Flutter y que FLUTTER_ROOT esté en tu PATH")
end

# 4) Carga el helper que define flutter_install_all_ios_pods y flutter_post_install
require File.expand_path(
  File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper'),
  __FILE__
)

# 5) Ejecuta el hook inicial que prepara el Podfile con lo que Flutter necesita
flutter_ios_podfile_setup

# 6) Declara tu target y llama a la instalación de pods de Flutter
target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods(File.dirname(File.realpath(__FILE__)))
end

# 7) Al final, el post_install que llama al helper de Flutter
post_install do |installer|
  # (Opcional) forzar deployment target 13.0 en todos los pods
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
    end
  end

  # Aquí sí existe flutter_post_install
  flutter_post_install(installer)
end
