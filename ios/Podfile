platform :ios, '13.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', 'Debug' => :debug, 'Profile' => :release, 'Release' => :release

# Ruta donde vive este Podfile (carpeta ios)
flutter_application_path = __dir__

# Obtiene la ruta del SDK de Flutter desde la variable de entorno (Codemagic la provee)
def flutter_root
  ENV.fetch('FLUTTER_ROOT')
end

# Carga el helper oficial de Flutter para CocoaPods
require File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper')

# Configuración inicial de pods de Flutter (rutas de headers, flags, etc.)
flutter_ios_podfile_setup

target 'Runner' do
  # Usa frameworks estáticos para los pods (requerido por Firebase y plugins Swift)
  use_frameworks! :linkage => :static

  # Instala todos los pods de iOS de Flutter y de los plugins listados en pubspec.yaml
  flutter_install_all_ios_pods(flutter_application_path)
end

post_install do |installer|
  # Primero, aplica los ajustes post-instalación de Flutter (bitcode, flags, rutas, etc.)
  flutter_post_install(installer)

  # Luego, desactiva la generación de interfaces de módulo Swift para evitar
  # el error "Using bridging headers with module interfaces is unsupported"
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'NO'
    end
  end
end
